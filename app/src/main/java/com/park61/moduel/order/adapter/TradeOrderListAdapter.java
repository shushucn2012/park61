package com.park61.moduel.order.adapter;import android.content.Intent;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import com.park61.BaseActivity;import com.park61.R;import com.park61.common.set.AppUrl;import com.park61.common.set.ParamBuild;import com.park61.common.tool.FU;import com.park61.common.tool.ImageManager;import com.park61.moduel.openmember.OpenMemberActivity;import com.park61.moduel.order.OrderBtnClickListenter.FightGroupDetailListener;import com.park61.moduel.order.OrderBtnClickListenter.PayOrderListener;import com.park61.moduel.order.bean.OrderInfoBean;import com.park61.moduel.order.bean.OrderState;import com.park61.moduel.order.fragment.TradeOrderPaperFragment;import com.park61.net.base.Request.Method;import com.park61.net.request.StringNetRequest;import com.park61.net.request.interfa.JsonRequestListener;import org.json.JSONObject;import java.util.List;/** * 商品订单列表的adapter */public class TradeOrderListAdapter extends BaseAdapter {    private List<OrderInfoBean> mList;    private BaseActivity mContext;    private LayoutInflater layoutInflater;    private int orderListType;    TradeOrderPaperFragment parentFragment;    public StringNetRequest netRequest;    public TradeOrderListAdapter(BaseActivity _context, TradeOrderPaperFragment parentFragment,                                   List<OrderInfoBean> _list, int orderListType) {        this.mList = _list;        this.mContext = _context;        this.orderListType = orderListType;        layoutInflater = LayoutInflater.from(mContext);        this.parentFragment = parentFragment;        netRequest = StringNetRequest.getInstance(_context);        netRequest.setMainContext(_context);    }    @Override    public int getCount() {        // TODO Auto-generated method stub        return mList.size();    }    @Override    public Object getItem(int position) {        // TODO Auto-generated method stub        return mList.get(position);    }    @Override    public long getItemId(int position) {        // TODO Auto-generated method stub        return position;    }    @Override    public View getView(int position, View convertView, ViewGroup parent) {        ViewHolder holder = null;        if (convertView == null) {            convertView = layoutInflater.inflate(R.layout.tradeorder_item, null);            holder = new ViewHolder();            holder.tv_order_id = (TextView) convertView.findViewById(R.id.tv_order_id);            holder.tv_order_state = (TextView) convertView.findViewById(R.id.tv_order_state);            holder.tv_real_pay = (TextView) convertView.findViewById(R.id.tv_real_pay);            holder.btn_1 = (Button) convertView.findViewById(R.id.btn1);            holder.btn_2 = (Button) convertView.findViewById(R.id.btn2);            holder.btn_3 = (Button) convertView.findViewById(R.id.btn3);            holder.img_icon1 = (ImageView) convertView.findViewById(R.id.img_icon1);            holder.img_icon2 = (ImageView) convertView.findViewById(R.id.img_icon2);            holder.img_icon3 = (ImageView) convertView.findViewById(R.id.img_icon3);            holder.tv_dots = (TextView) convertView.findViewById(R.id.tv_dots);            holder.tv_num = (TextView) convertView.findViewById(R.id.tv_num);            holder.line = convertView.findViewById(R.id.line);            convertView.setTag(holder);        } else {            holder = (ViewHolder) convertView.getTag();        }        OrderInfoBean order = mList.get(position);        if (position == 0) {            holder.line.setVisibility(View.GONE);        } else {            holder.line.setVisibility(View.VISIBLE);        }        holder.tv_order_id.setText("订单编号：" + order.getId() + "");//        holder.tv_order_state//                    .setText(this.mContext.getResources().getStringArray(R.array.order_statue_name)[order.orderStatus]);        holder.tv_order_state.setText(order.getOrderStatusName());        holder.tv_real_pay.setText(FU.formatPrice(order.getOrderToPayAmount()));        if (order.getOrderType() == 3) {//订单类型为1：普通订单，2：拼团订单，3：会员订单            holder.tv_num.setVisibility(View.GONE);        } else {            holder.tv_num.setVisibility(View.VISIBLE);            holder.tv_num.setText(order.getPackageNum() + "个包裹(共" + order.getOrderItemNum() + "件)");        }        if (order.getPicUrlList().size() == 1) {            holder.img_icon1.setVisibility(View.VISIBLE);            holder.img_icon2.setVisibility(View.GONE);            holder.img_icon3.setVisibility(View.GONE);            ImageManager.getInstance().displayImg(holder.img_icon1, order.getPicUrlList().get(0));        } else if (order.getPicUrlList().size() == 2) {            holder.img_icon1.setVisibility(View.VISIBLE);            holder.img_icon2.setVisibility(View.VISIBLE);            holder.img_icon3.setVisibility(View.GONE);            ImageManager.getInstance().displayImg(holder.img_icon1, order.getPicUrlList().get(0));            ImageManager.getInstance().displayImg(holder.img_icon2, order.getPicUrlList().get(1));        } else if (order.getPicUrlList().size() == 3) {            holder.img_icon1.setVisibility(View.VISIBLE);            holder.img_icon2.setVisibility(View.VISIBLE);            holder.img_icon3.setVisibility(View.VISIBLE);            ImageManager.getInstance().displayImg(holder.img_icon1, order.getPicUrlList().get(0));            ImageManager.getInstance().displayImg(holder.img_icon2, order.getPicUrlList().get(1));            ImageManager.getInstance().displayImg(holder.img_icon3, order.getPicUrlList().get(2));        } else if (order.getPicUrlList().size() > 3) {            holder.img_icon1.setVisibility(View.VISIBLE);            holder.img_icon2.setVisibility(View.VISIBLE);            holder.img_icon3.setVisibility(View.VISIBLE);            holder.tv_dots.setVisibility(View.VISIBLE);            ImageManager.getInstance().displayImg(holder.img_icon1, order.getPicUrlList().get(0));            ImageManager.getInstance().displayImg(holder.img_icon2, order.getPicUrlList().get(1));            ImageManager.getInstance().displayImg(holder.img_icon3, order.getPicUrlList().get(2));        }        //订单状态：1 已下单:货款未全收        if (order.orderStatus == OrderState.ORDER_STATUS_ORDERED_WAITING_FOR_PAYMENT) {            //------ start modify by super 201705171618 ------//            if (order.getOrderType() == 3) {                holder.btn_1.setVisibility(View.GONE);            }else {                holder.btn_1.setVisibility(View.VISIBLE);                holder.btn_1.setText("取消订单");                holder.btn_1.setOnClickListener(new CancelOrderListener(order));            }            //------ end modify by super 201705171618 ------//            holder.btn_3.setVisibility(View.GONE);            holder.btn_2.setVisibility(View.VISIBLE);            holder.btn_2.setText("支付订单");            holder.btn_2.setOnClickListener(new PayOrderListener(this.mContext, order));        } else if (order.orderStatus == OrderState.ORDER_STATUS_ORDERED_PAYED) {//2 已下单:货款已全收            if (order.getOrderType() == 3) {//会员订单                holder.tv_order_state.setText("交易完成");                holder.btn_2.setVisibility(View.VISIBLE);                holder.btn_2.setText("再次购买");                holder.btn_2.setOnClickListener(new MemberListener(order));                holder.btn_3.setVisibility(View.GONE);            } else if (order.getFightGroupOpenId() != null) {//拼团                holder.btn_2.setVisibility(View.GONE);                holder.btn_3.setVisibility(View.VISIBLE);                holder.btn_3.setOnClickListener(new FightGroupDetailListener(this.mContext, order));            } else {                holder.btn_2.setVisibility(View.GONE);                holder.btn_3.setVisibility(View.GONE);            }            holder.btn_1.setVisibility(View.GONE);        } else if (order.orderStatus == OrderState.ORDER_STATUS_ORDER_CANCELED) {//10 订单取消            if (order.getFightGroupOpenId() != null) {//拼团订单                holder.btn_3.setVisibility(View.VISIBLE);                holder.btn_3.setOnClickListener(new FightGroupDetailListener(this.mContext, order));                holder.btn_1.setVisibility(View.GONE);                holder.btn_2.setVisibility(View.GONE);            } else {                holder.btn_1.setVisibility(View.GONE);                holder.btn_2.setVisibility(View.GONE);                holder.btn_3.setVisibility(View.GONE);            }        } else {            if (order.getOrderType() == 2) {//订单类型为1：普通订单，2：拼团订单，3：会员订单                holder.btn_3.setVisibility(View.VISIBLE);                holder.btn_3.setOnClickListener(new FightGroupDetailListener(this.mContext, order));                holder.btn_1.setVisibility(View.GONE);                holder.btn_2.setVisibility(View.GONE);            } else {                holder.btn_1.setVisibility(View.GONE);                holder.btn_2.setVisibility(View.GONE);                holder.btn_3.setVisibility(View.GONE);            }        }        return convertView;    }    class ViewHolder {        TextView tv_order_id;        TextView tv_order_state;        TextView tv_real_pay;        Button btn_1;        Button btn_2;        Button btn_3;        ImageView img_icon1, img_icon2, img_icon3;        TextView tv_dots, tv_num;        View line;    }    /**     * 再次购买会员卡     **/    class MemberListener implements OnClickListener {        OrderInfoBean order;        public MemberListener(OrderInfoBean order) {            super();            this.order = order;        }        @Override        public void onClick(View v) {            Intent intent = new Intent(mContext, OpenMemberActivity.class);            mContext.startActivity(intent);        }    }    /**     * 取消订单     **/    class CancelOrderListener implements OnClickListener {        OrderInfoBean order;        public CancelOrderListener(OrderInfoBean order) {            super();            this.order = order;        }        @Override        public void onClick(View v) {            showCancelOrderDialog(order);        }    }    public void showCancelOrderDialog(final OrderInfoBean order) {        mContext.dDialog.showDialog("提示", "确定要取消该订单吗？", "确定", "取消", new OnClickListener() {            @Override            public void onClick(View v) {                mContext.dDialog.dismissDialog();                mContext.showDialog();                asyncCancelOrder(order);            }        }, new OnClickListener() {            @Override            public void onClick(View v) {                mContext.dDialog.dismissDialog();            }        });    }    /**     * 取消     */    private void asyncCancelOrder(OrderInfoBean order) {        String wholeUrl = AppUrl.host + AppUrl.ORDER_CANCEL;        String requestBodyData = ParamBuild.getOrderDetail(order.id);        netRequest.startRequest(wholeUrl, Method.POST, requestBodyData, 0, new CancelOrderRequestListener(order));    }    class CancelOrderRequestListener implements JsonRequestListener {        OrderInfoBean order;        public CancelOrderRequestListener(OrderInfoBean order) {            super();            this.order = order;        }        @Override        public void onStart(int requestId) {            // TODO Auto-generated method stub        }        @Override        public void onError(int requestId, String errorCode, String errorMsg) {            mContext.dismissDialog();            mContext.showShortToast("取消订单失败!");        }        @Override        public void onSuccess(int requestId, String url, JSONObject jsonResult) {            mContext.showShortToast("取消订单成功");            mContext.dismissDialog();            order.orderStatus = OrderState.ORDER_STATUS_ORDER_CANCELED;            order.setOrderStatusName("订单取消");            notifyDataSetChanged();        }    }}